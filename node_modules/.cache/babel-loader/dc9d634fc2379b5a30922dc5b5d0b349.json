{"ast":null,"code":"var _jsxFileName = \"/Users/ilyasorokin/Work/Projects/ReactJS/src/Recipes/Recipes.tsx\";\nimport React from 'react';\nimport './Recipes.css';\nimport Button from '@material-ui/core/Button';\nimport storaService from '../Business/StorageService';\n\nfunction Recipe(props) {\n  let classes = ['listItem'];\n\n  if (props.recipe.isSelected) {\n    classes.push('Selected');\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.join(' '),\n    onClick: props.onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container clearfix wholeField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"listItemTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" \", props.recipe.name), React.createElement(\"div\", {\n    className: \"mainArticle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"recipeImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.recipe.img,\n    className: \"listItemImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"listItemDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" \", props.recipe.recipyDesctiption)), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Edit\")));\n}\n\nclass Recipes extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searching: false,\n      filter: '',\n      recipes: storaService.getRecipes().map(obj => {\n        return {\n          id: obj.id,\n          isSelected: false,\n          name: obj.name,\n          price: obj.price,\n          img: obj.img,\n          recipyDesctiption: obj.recipyDesctiption\n        };\n      })\n    };\n  }\n\n  handleSelect(id) {\n    let recipes = this.state.recipes.concat();\n    recipes.forEach(c => {\n      c.isSelected = c.id == id;\n    });\n    this.setState(recipes);\n    console.log(id);\n  }\n\n  handleEdit() {\n    this.setState({\n      searching: !this.state.searching\n    });\n  }\n\n  handleEditItem(id) {\n    alert(\"text\");\n  }\n\n  handleSearch(text) {\n    this.setState({\n      filter: text\n    });\n  }\n\n  renderRecipes() {\n    let filter = this.state.filter.toLowerCase();\n    return React.createElement(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.recipes.flatMap(recipe => {\n      if (!filter || recipe.name.toLowerCase().includes(filter) || recipe.recipyDesctiption.toLowerCase().includes(filter)) {\n        return React.createElement(Recipe, {\n          recipe: recipe,\n          onSelect: this.handleSelect.bind(this, recipe.id),\n          onEdit: this.handleEditItem.bind(this, recipe.id),\n          key: recipe.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    }));\n  }\n\n  renderControls() {\n    let text = this.state.searching ? 'cancel' : 'search';\n    return React.createElement(\"div\", {\n      className: \"container clearfix searchField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.filter,\n      type: \"text\",\n      placeholder: \"Search Recipes\",\n      style: {\n        margin: 10\n      },\n      onChange: e => {\n        this.handleSearch(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleEdit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, text));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Recipes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.renderControls(), this.renderRecipes());\n  }\n\n}\n\nexport default Recipes;","map":{"version":3,"sources":["/Users/ilyasorokin/Work/Projects/ReactJS/src/Recipes/Recipes.tsx"],"names":["React","Button","storaService","Recipe","props","classes","recipe","isSelected","push","join","onSelect","name","img","recipyDesctiption","Recipes","Component","state","searching","filter","recipes","getRecipes","map","obj","id","price","handleSelect","concat","forEach","c","setState","console","log","handleEdit","handleEditItem","alert","handleSearch","text","renderRecipes","toLowerCase","flatMap","includes","bind","renderControls","margin","e","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Recipes.css'\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport storaService, {StorageService} from '../Business/StorageService';\n\ninterface IRecipe {\n    id: number,\n    isSelected: boolean,\n    name: string,\n    price: number,\n    img: string,\n    recipyDesctiption: string\n}\n\ninterface IRecipeProps {\n    recipe: IRecipe\n    onSelect: () => void\n    onEdit: () => void\n}\n\nfunction Recipe(props: IRecipeProps) {\n    let classes = ['listItem']\n    if (props.recipe.isSelected) {\n        classes.push('Selected')\n    }\n    return (\n        <div className={classes.join(' ')} onClick={props.onSelect}>\n            <div className=\"container clearfix wholeField\">\n                <div className=\"listItemTitle\"> {props.recipe.name}</div>\n                <div className=\"mainArticle\">\n                    <div className=\"recipeImage\">\n                        <img src={props.recipe.img} className=\"listItemImg\"/>\n                    </div>\n                    <div className=\"listItemDescription\"> {props.recipe.recipyDesctiption}</div>\n                </div>\n                <Button variant=\"contained\" color=\"primary\">\n                    Edit\n                </Button>\n            </div>\n        </div>\n    )\n}\n\n\nclass Recipes extends React.Component {\n\n    state = {\n        searching: false,\n        filter: '',\n         recipes: storaService.getRecipes().map( obj => {\n             return {\n                 id: obj.id,\n                 isSelected: false,\n                 name: obj.name,\n                 price: obj.price,\n                 img: obj.img,\n                 recipyDesctiption: obj.recipyDesctiption\n             };\n         })\n    }\n\n\n     handleSelect(id: number) {\n        let recipes = this.state.recipes.concat()\n         recipes.forEach(c => { c.isSelected = c.id == id})\n         this.setState(recipes)\n        console.log(id)\n     }\n\n     handleEdit() {\n        this.setState( {searching: !this.state.searching})\n     }\n\n     handleEditItem(id: number) {\n        alert(\"text\")\n     }\n\n     handleSearch(text: string) {\n        this.setState({filter: text})\n     }\n\n     renderRecipes() {\n        let filter = this.state.filter.toLowerCase()\n         return (\n             <div className=\"list\">\n                 {\n                     this.state.recipes.flatMap(recipe => {\n                         if (!filter || recipe.name.toLowerCase().includes(filter) || recipe.recipyDesctiption.toLowerCase().includes(filter)) {\n                             return <Recipe recipe={recipe}\n                                            onSelect={this.handleSelect.bind(this, recipe.id)}\n                                            onEdit={ this.handleEditItem.bind(this, recipe.id)}\n                                            key={recipe.id}/>\n                         }\n                         return  null\n                     })\n                 }\n                 </div>\n         )\n     }\n\n     renderControls() {\n        let text = this.state.searching ? 'cancel' : 'search'\n        return(\n            <div className=\"container clearfix searchField\">\n                <input\n                    value={this.state.filter}\n                    type=\"text\"\n                    placeholder=\"Search Recipes\"\n                    style={{margin: 10}}\n                    onChange={ (e) => {\n                        this.handleSearch(e.target.value)\n                    }}\n                />\n            <button onClick={ () => {this.handleEdit()} }>{text}</button>\n                </div>\n        )\n     }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div className=\"Recipes\">\n                {\n                    this.renderControls()\n                }\n                {\n                    this.renderRecipes()\n                }\n            </div>\n        )\n    }\n}\n\n\nexport default Recipes;\n"]},"metadata":{},"sourceType":"module"}