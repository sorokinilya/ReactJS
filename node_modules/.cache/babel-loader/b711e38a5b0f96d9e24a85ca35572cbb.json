{"ast":null,"code":"var _jsxFileName = \"/Users/ilyasorokin/Work/Projects/ReactJS/src/Components/RecipeItem.tsx\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectItem } from \"../Redux/List/actions\";\nimport { editItem } from \"../Redux/List/actions\";\n\nconst RecipeItem = (recipe, selectItem, editItem) => {\n  let classes = ['listItem'];\n\n  if (recipe.isSelected) {\n    classes.push('Selected');\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.join(' '),\n    onClick: () => selectItem(recipe.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container clearfix wholeField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"listItemTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" \", recipe.name), React.createElement(\"div\", {\n    className: \"mainArticle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"recipeImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: recipe.img,\n    className: \"listItemImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"listItemDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", recipe.recipyDesctiption)), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => editItem(recipe.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Edit\")));\n};\n\nexport default connect(null, {\n  selectItem,\n  editItem\n})(RecipeItem);","map":{"version":3,"sources":["/Users/ilyasorokin/Work/Projects/ReactJS/src/Components/RecipeItem.tsx"],"names":["Button","React","connect","selectItem","editItem","RecipeItem","recipe","classes","isSelected","push","join","id","name","img","recipyDesctiption"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAIA,MAAOC,UAAU,GAAG,CAACC,MAAD,EAAoBH,UAApB,EAAsDC,QAAtD,KAAyF;AACzG,MAAIG,OAAO,GAAG,CAAC,UAAD,CAAd;;AACA,MAAID,MAAM,CAACE,UAAX,EAAuB;AACnBD,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb;AACH;;AACD,SACI;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAhB;AAAmC,IAAA,OAAO,EAAG,MAAKP,UAAU,CAACG,MAAM,CAACK,EAAR,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiCL,MAAM,CAACM,IAAxC,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEN,MAAM,CAACO,GAAjB;AAAsB,IAAA,SAAS,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuCP,MAAM,CAACQ,iBAA9C,CAJJ,CAFJ,EAQI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAG,MAAMV,QAAQ,CAACE,MAAM,CAACK,EAAR,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CADJ,CADJ;AAgBH,CArBD;;AAuBA,eAAeT,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAP,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectItem } from \"../Redux/List/actions\";\nimport { editItem } from \"../Redux/List/actions\";\nimport { ListItem } from \"../Redux/List/types\";\n\n\nconst  RecipeItem = (recipe: ListItem,  selectItem: (id: Number) => void, editItem: (id: Number) => void) => {\n    let classes = ['listItem']\n    if (recipe.isSelected) {\n        classes.push('Selected')\n    }\n    return (\n        <div className={classes.join(' ')} onClick={ ()=> selectItem(recipe.id) }>\n            <div className=\"container clearfix wholeField\">\n                <div className=\"listItemTitle\"> {recipe.name}</div>\n                <div className=\"mainArticle\">\n                    <div className=\"recipeImage\">\n                        <img src={recipe.img} className=\"listItemImg\"/>\n                    </div>\n                    <div className=\"listItemDescription\"> {recipe.recipyDesctiption}</div>\n                </div>\n                <Button variant=\"contained\" color=\"primary\" onClick={ () => editItem(recipe.id) }>\n                    Edit\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null, { selectItem, editItem })(RecipeItem);\n"]},"metadata":{},"sourceType":"module"}