{"ast":null,"code":"import { EDIT_ITEM, SELECT_ITEM } from \"./types\";\nimport \"../../Business/StorageService\";\nimport storaService from \"../../Business/StorageService\";\nimport { UPDATE_TEXT } from \"../Filter/types\";\nconst initialState = {\n  recipes: storaService.getRecipes().map(item => {\n    return {\n      id: item.id,\n      isSelected: false,\n      name: item.name,\n      price: item.price,\n      img: item.img,\n      recipyDesctiption: item.recipyDesctiption\n    };\n  })\n};\nexport function listReducer(state = initialState, action) {\n  switch (action.type) {\n    case EDIT_ITEM:\n      {\n        return state;\n      }\n\n    case SELECT_ITEM:\n      {\n        return state;\n      }\n\n    case UPDATE_TEXT:\n      {\n        const items = storaService.getRecipes().map(item => {\n          return {\n            id: item.id,\n            isSelected: false,\n            name: item.name,\n            price: item.price,\n            img: item.img,\n            recipyDesctiption: item.recipyDesctiption\n          };\n        });\n\n        if (action.payload) {\n          return {\n            recipes: items.filter(item => {\n              return item.name.includes(action.payload) || item.recipyDesctiption.includes(action.payload);\n            })\n          };\n        }\n\n        return {\n          recipes: items\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ilyasorokin/Work/Projects/ReactJS/src/Redux/List/reducers.ts"],"names":["EDIT_ITEM","SELECT_ITEM","storaService","UPDATE_TEXT","initialState","recipes","getRecipes","map","item","id","isSelected","name","price","img","recipyDesctiption","listReducer","state","action","type","items","payload","filter","includes"],"mappings":"AAAA,SAAQA,SAAR,EAAyDC,WAAzD,QAA2E,SAA3E;AACA,OAAQ,+BAAR;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAAsBC,WAAtB,QAAwC,iBAAxC;AAEA,MAAMC,YAAuB,GAAG;AAC5BC,EAAAA,OAAO,EAAEH,YAAY,CAACI,UAAb,GAA0BC,GAA1B,CAA8BC,IAAI,IAAI;AAC3C,WAAO;AACHC,MAAAA,EAAE,EAAED,IAAI,CAACC,EADN;AAEHC,MAAAA,UAAU,EAAE,KAFT;AAGHC,MAAAA,IAAI,EAAEH,IAAI,CAACG,IAHR;AAIHC,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAJT;AAKHC,MAAAA,GAAG,EAAEL,IAAI,CAACK,GALP;AAMHC,MAAAA,iBAAiB,EAAEN,IAAI,CAACM;AANrB,KAAP;AAQH,GATQ;AADmB,CAAhC;AAaA,OAAO,SAASC,WAAT,CAAqBC,KAAK,GAAGZ,YAA7B,EAA2Ca,MAA3C,EAA+F;AAClG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,SAAL;AAAgB;AACZ,eAAQgB,KAAR;AACH;;AACD,SAAKf,WAAL;AAAkB;AACd,eAAQe,KAAR;AACH;;AACD,SAAKb,WAAL;AAAkB;AACd,cAAMgB,KAAK,GAAGjB,YAAY,CAACI,UAAb,GAA0BC,GAA1B,CAA8BC,IAAI,IAAI;AAChD,iBAAO;AACHC,YAAAA,EAAE,EAAED,IAAI,CAACC,EADN;AAEHC,YAAAA,UAAU,EAAE,KAFT;AAGHC,YAAAA,IAAI,EAAEH,IAAI,CAACG,IAHR;AAIHC,YAAAA,KAAK,EAAEJ,IAAI,CAACI,KAJT;AAKHC,YAAAA,GAAG,EAAEL,IAAI,CAACK,GALP;AAMHC,YAAAA,iBAAiB,EAAEN,IAAI,CAACM;AANrB,WAAP;AAQH,SATa,CAAd;;AAUA,YAAIG,MAAM,CAACG,OAAX,EAAoB;AAChB,iBAAO;AACHf,YAAAA,OAAO,EAAEc,KAAK,CAACE,MAAN,CAAab,IAAI,IAAI;AAC1B,qBAAOA,IAAI,CAACG,IAAL,CAAUW,QAAV,CAAmBL,MAAM,CAACG,OAA1B,KAAsCZ,IAAI,CAACM,iBAAL,CAAuBQ,QAAvB,CAAgCL,MAAM,CAACG,OAAvC,CAA7C;AACH,aAFQ;AADN,WAAP;AAKH;;AACD,eAAO;AACHf,UAAAA,OAAO,EAAEc;AADN,SAAP;AAGH;;AACD;AACI,aAAOH,KAAP;AA9BR;AAgCH","sourcesContent":["import {EDIT_ITEM, ListActionTypes, ListItem, ListState, SELECT_ITEM} from \"./types\";\nimport  \"../../Business/StorageService\"\nimport storaService from \"../../Business/StorageService\";\nimport {FilterAction, UPDATE_TEXT} from \"../Filter/types\";\n\nconst initialState: ListState = {\n    recipes: storaService.getRecipes().map(item => {\n        return {\n            id: item.id,\n            isSelected: false,\n            name: item.name,\n            price: item.price,\n            img: item.img,\n            recipyDesctiption: item.recipyDesctiption\n        }\n    })\n}\n\nexport function listReducer(state = initialState, action: ListActionTypes | FilterAction) : ListState {\n    switch (action.type) {\n        case EDIT_ITEM: {\n            return  state\n        }\n        case SELECT_ITEM: {\n            return  state\n        }\n        case UPDATE_TEXT: {\n            const items = storaService.getRecipes().map(item => {\n                return {\n                    id: item.id,\n                    isSelected: false,\n                    name: item.name,\n                    price: item.price,\n                    img: item.img,\n                    recipyDesctiption: item.recipyDesctiption\n                }\n            })\n            if (action.payload) {\n                return {\n                    recipes: items.filter(item => {\n                        return item.name.includes(action.payload) || item.recipyDesctiption.includes(action.payload)\n                    })\n                }\n            }\n            return {\n                recipes: items\n            }\n        }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}