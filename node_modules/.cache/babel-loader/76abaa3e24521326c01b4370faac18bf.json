{"ast":null,"code":"var _jsxFileName = \"/Users/ilyasorokin/Work/Projects/ReactJS/src/index.tsx\";\n// //import React from 'react';\n// //import ReactDOM from 'react-dom';\n// import './index.css';\n//\n//\n// import  { listReducer } from \"./Redux/List/reducers\";\n// import { filterReducer} from \"./Redux/Filter/reducers\";\n// import {combineReducers} from \"redux\";\n//\n// const rootReducer = combineReducers( {\n//     listReducer,\n//     filterReducer\n// })\n//\n// export type AppState = ReturnType<typeof rootReducer>\n//\n// // ReactDOM.render(<Recipes />, document.getElementById('root'));\n// //\n// // // If you want your app to work offline and load faster, you can change\n// // // unregister() to register() below. Note this comes with some pitfalls.\n// // // Learn more about service workers: https://bit.ly/CRA-PWA\n// // serviceWorker.unregister();\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Redux/store\";\nimport App from \"./App\";\nconst store = configureStore();\n\nconst Root = () => React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}));\n\nrender(React.createElement(Root, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/ilyasorokin/Work/Projects/ReactJS/src/index.tsx"],"names":["React","render","Provider","configureStore","App","store","Root","document","getElementById"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,MAAMC,KAAK,GAAGF,cAAc,EAA5B;;AAEA,MAAMG,IAAI,GAAG,MACT,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;;AAMAJ,MAAM,CAAC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAWM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX,CAAN","sourcesContent":["// //import React from 'react';\n// //import ReactDOM from 'react-dom';\n// import './index.css';\n//\n//\n// import  { listReducer } from \"./Redux/List/reducers\";\n// import { filterReducer} from \"./Redux/Filter/reducers\";\n// import {combineReducers} from \"redux\";\n//\n// const rootReducer = combineReducers( {\n//     listReducer,\n//     filterReducer\n// })\n//\n// export type AppState = ReturnType<typeof rootReducer>\n//\n// // ReactDOM.render(<Recipes />, document.getElementById('root'));\n// //\n// // // If you want your app to work offline and load faster, you can change\n// // // unregister() to register() below. Note this comes with some pitfalls.\n// // // Learn more about service workers: https://bit.ly/CRA-PWA\n// // serviceWorker.unregister();\n\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Redux/store\";\n\nimport App from \"./App\";\n\nconst store = configureStore();\n\nconst Root = () => (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nrender(<Root />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}