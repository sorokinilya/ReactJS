{"ast":null,"code":"var _jsxFileName = \"/Users/ilyasorokin/Work/Projects/ReactJS/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { SearchInterface } from \"./Components/SearchItem\";\nimport { RecipeList } from \"./Components/RecipeItem\";\nimport { updateText, addAction, searchAction } from \"./Redux/Filter/actions\";\nimport { connect } from \"react-redux\";\nimport { editItem, selectItem } from \"./Redux/List/actions\";\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(SearchInterface, {\n      text: this.props.filter.searchString,\n      buttonText: this.props.filter.buttonText,\n      updated: this.props.updateText,\n      search: this.props.searchAction,\n      add: this.props.addAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(RecipeList, {\n      items: this.props.list.recipes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  filter: state.filterReducer,\n  list: state.listReducer\n});\n\nexport default connect(mapStateToProps, {\n  searchAction,\n  updateText,\n  addAction,\n  editItem,\n  selectItem\n})(App);","map":{"version":3,"sources":["/Users/ilyasorokin/Work/Projects/ReactJS/src/App.tsx"],"names":["React","SearchInterface","RecipeList","updateText","addAction","searchAction","connect","editItem","selectItem","App","Component","render","props","filter","searchString","buttonText","list","recipes","mapStateToProps","state","filterReducer","listReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAIA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,wBAApD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,sBAAnC;;AAcA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAA4C;AAExCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,YAA1C;AACiB,MAAA,UAAU,EAAG,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,UADhD;AAEiB,MAAA,OAAO,EAAG,KAAKH,KAAL,CAAWT,UAFtC;AAGiB,MAAA,MAAM,EAAG,KAAKS,KAAL,CAAWP,YAHrC;AAIiB,MAAA,GAAG,EAAG,KAAKO,KAAL,CAAWR,SAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMqB,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWI,IAAX,CAAgBC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANrB,CADJ;AAUH;;AAbuC;;AAiB5C,MAAMC,eAAe,GAAIC,KAAD,KAAsB;AAC1CN,EAAAA,MAAM,EAAEM,KAAK,CAACC,aAD4B;AAE1CJ,EAAAA,IAAI,EAAEG,KAAK,CAACE;AAF8B,CAAtB,CAAxB;;AAKA,eAAef,OAAO,CAClBY,eADkB,EAElB;AAAGb,EAAAA,YAAH;AAAiBF,EAAAA,UAAjB;AAA6BC,EAAAA,SAA7B;AAAwCG,EAAAA,QAAxC;AAAkDC,EAAAA;AAAlD,CAFkB,CAAP,CAGbC,GAHa,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { AppState } from './Redux/index'\nimport { ListState} from \"./Redux/List/types\";\nimport { FilterState} from \"./Redux/Filter/types\";\nimport { SearchInterface } from \"./Components/SearchItem\"\nimport { RecipeList } from \"./Components/RecipeItem\"\nimport { updateText, addAction, searchAction } from \"./Redux/Filter/actions\";\nimport {connect} from \"react-redux\";\nimport {editItem, selectItem} from \"./Redux/List/actions\";\n\ninterface AppProps {\n    list: ListState;\n    filter: FilterState;\n    searchAction: typeof searchAction;\n    updateText: typeof updateText;\n    addAction: typeof addAction;\n    editItem: typeof editItem;\n    selectItem: typeof selectItem;\n}\n\nexport type UpdateSearchParam = React.SyntheticEvent<{ value: string }>;\n\nclass App extends React.Component<AppProps> {\n\n    render() {\n        return (\n            <div className=\"parent\">\n                <SearchInterface text={ this.props.filter.searchString }\n                                 buttonText={ this.props.filter.buttonText }\n                                 updated={ this.props.updateText  }\n                                 search={ this.props.searchAction }\n                                 add={ this.props.addAction }/>\n                                 <RecipeList items={this.props.list.recipes }/>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    filter: state.filterReducer,\n    list: state.listReducer\n});\n\nexport default connect(\n    mapStateToProps,\n    {  searchAction, updateText, addAction, editItem, selectItem }\n)(App);\n\n"]},"metadata":{},"sourceType":"module"}