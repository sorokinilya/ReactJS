{"ast":null,"code":"var _jsxFileName = \"/Users/ilyasorokin/Work/Projects/ReactJS/src/Recipes/RecipeItem.tsx\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nexport function RecipeItem(props) {\n  let classes = ['listItem'];\n\n  if (props.recipe.isSelected) {\n    classes.push('Selected');\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.join(' '),\n    onClick: props.onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container clearfix wholeField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"listItemTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" \", props.recipe.name), React.createElement(\"div\", {\n    className: \"mainArticle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"recipeImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.recipe.img,\n    className: \"listItemImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"listItemDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" \", props.recipe.recipyDesctiption)), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: props.onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Edit\")));\n}","map":{"version":3,"sources":["/Users/ilyasorokin/Work/Projects/ReactJS/src/Recipes/RecipeItem.tsx"],"names":["Button","React","RecipeItem","props","classes","recipe","isSelected","push","join","onSelect","name","img","recipyDesctiption","onEdit"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAiBA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAAyC;AAC5C,MAAIC,OAAO,GAAG,CAAC,UAAD,CAAd;;AACA,MAAID,KAAK,CAACE,MAAN,CAAaC,UAAjB,EAA6B;AACzBF,IAAAA,OAAO,CAACG,IAAR,CAAa,UAAb;AACH;;AACD,SACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI,IAAR,CAAa,GAAb,CAAhB;AAAmC,IAAA,OAAO,EAAEL,KAAK,CAACM,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiCN,KAAK,CAACE,MAAN,CAAaK,IAA9C,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEP,KAAK,CAACE,MAAN,CAAaM,GAAvB;AAA4B,IAAA,SAAS,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuCR,KAAK,CAACE,MAAN,CAAaO,iBAApD,CAJJ,CAFJ,EAQI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAET,KAAK,CAACU,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CADJ,CADJ;AAgBH","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nexport interface IRecipe {\n    id: number,\n    isSelected: boolean,\n    name: string,\n    price: number,\n    img: string,\n    recipyDesctiption: string\n}\n\nexport interface IRecipeProps {\n    recipe: IRecipe\n    onSelect: () => void\n    onEdit: () => void\n}\n\nexport function RecipeItem(props: IRecipeProps) {\n    let classes = ['listItem']\n    if (props.recipe.isSelected) {\n        classes.push('Selected')\n    }\n    return (\n        <div className={classes.join(' ')} onClick={props.onSelect}>\n            <div className=\"container clearfix wholeField\">\n                <div className=\"listItemTitle\"> {props.recipe.name}</div>\n                <div className=\"mainArticle\">\n                    <div className=\"recipeImage\">\n                        <img src={props.recipe.img} className=\"listItemImg\"/>\n                    </div>\n                    <div className=\"listItemDescription\"> {props.recipe.recipyDesctiption}</div>\n                </div>\n                <Button variant=\"contained\" color=\"primary\" onClick={props.onEdit}>\n                    Edit\n                </Button>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}